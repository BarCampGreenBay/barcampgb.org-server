---
- hosts: web
  gather_facts: yes
  become: yes
  vars:
    app_path: /var/www/barcampgb.org
    app_repo: https://github.com/BarCampGreenBay/barcampgb.org.git
    hostname: barcampgb.org
    mongod_host: localhost
    mongod_port: 2700
    node_env: production
    web:
      service: bcgb-web
      description: BarCamp Green Bay web server
      path: src/web
      script: server.js
      port: 8000
      error500: /src/web/assets/500.html
    webhook:
      service: travis-hook
      description: Travis CI webhook listener that updates nodejs server on successful tests
      port: 9000
      location: /webhook
      event: success
      match: branch == 'master' && repository.name == 'barcampgb.org'
      command: stop {{ web.service }} && sudo -u {{ node_sudo_user }} git -C {{ app_path }} pull && start {{ web.service }}
  vars_files:
    - secret-vars.yaml

  roles:

  - role: mongo_mongod

  - role: nodejs-app
    tags:
      - app

  - role: nodejs-service
    service: "{{ web.service }}"
    description: "{{ web.description }}"
    service_app_path: "{{ app_path }}/{{ web.path }}"
    script_path: "{{ service_app_path }}/{{ web.script }}"
    env_vars:
      NODE_ENV: "{{ node_env }}"
      NODE_PORT: "{{ web.port }}"
      MONGOD_HOST: "{{ mongod_host }}"
      MONGOD_PORT: "{{ mongod_port }}"
      MAILGUN_APIKEY: "{{ mailgun_apikey }}"
      MAILGUN_DOMAIN: "{{ mailgun_domain }}"
    tags:
      - service

  - role: travisci-webhook
    service: "{{ webhook.service }}"
    description: "{{ webhook.description }}"
    port: "{{ webhook.port }}"
    location: "{{ webhook.location }}"
    token: "{{ travis_user_token }}"
    event: "{{ webhook.event }}"
    match: "{{ webhook.match }}"
    command: "{{ webhook.command }}"
    tags:
      - webhook

  - role: nginx
    nginx_sites:
      default:
        - listen 80
        - server_name www.{{ hostname }}
        - root {{ app_path }}
        - location {{ webhook.location }} {
            proxy_pass http://127.0.0.1:{{ webhook.port }};
          }
        - location / {
            proxy_pass http://127.0.0.1:{{ web.port }};
          }
        - location {{ web.error500 }} {}
      redirect:
          - server_name {{ hostname }}
          - return 301 $scheme://www.{{ hostname }}$request_uri
    nginx_configs:
      error_pages:
        - error_page 500 502 503 504 {{ web.error500 }}
      proxy:
        - proxy_set_header X-Real-IP $remote_addr
        - proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for
        - proxy_set_header Host $http_host
        - proxy_set_header X-NginX-Proxy true
        - proxy_redirect off
        - proxy_http_version 1.1
        - proxy_set_header Upgrade $http_upgrade
        - proxy_set_header Connection "upgrade"
    tags:
      - nginx
